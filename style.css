* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --BGCOLOR-HUE: 220.2;
    --MAIN-SAT: 40%;
    --MAIN-LIGHT: 80%;
    --CONTRAST-COLOR-HUE: calc(var(--BGCOLOR-HUE) + 180);
    --CONTRAST-SAT: var(--MAIN-SAT);
    --CONTRAST-LIGHT: calc(var(--MAIN-LIGHT)/7);
    --BGCOLOR: hsl(var(--BGCOLOR-HUE), var(--MAIN-SAT), var(--MAIN-LIGHT));
    --BGCOLOR-DIM: hsl(var(--BGCOLOR-HUE), calc(var(--MAIN-SAT) - 20%), var(--MAIN-LIGHT));
    --CONTRAST-COLOR: hsl(var(--CONTRAST-COLOR-HUE), var(--CONTRAST-SAT), var(--CONTRAST-LIGHT));
    --CONTRAST-COLOR-DIM: hsla(var(--CONTRAST-COLOR-HUE), var(--CONTRAST-SAT), var(--CONTRAST-LIGHT), 0.8);
    --CONTRAST-COLOR-DIMER: hsla(var(--CONTRAST-COLOR-HUE), var(--CONTRAST-SAT), var(--CONTRAST-LIGHT), 0.4);
    --HEADER_HEIGHT: 1.8rem;
    --SMALL-WINDOW-HEIGHT: 100svh;
    --LARGE-WINDOW-HEIGHT: 100lvh;

    scroll-behavior: smooth;
    min-height: 100vh;
}

.darkmode {
    --CONTRAST-LIGHT: 90%;
    --MAIN-LIGHT: calc(var(--CONTRAST-LIGHT)/5);
}

html {
    bottom: 0;
    left: 0;
    overflow-x: hidden;
}

body {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 1.3rem;
    color: var(--CONTRAST-COLOR);
    background-color: var(--BGCOLOR);
    padding: 1rem 0.3rem;
    min-height: 100vh;
    max-width: 1000px;
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.mobile-wrapper{
    position: fixed;
    bottom: 0;
    overflow: hidden;
    padding-bottom: 0;
    max-height: 100vh;
    padding-top: calc(100vh - 100svh);
}

.mobile-scrollable-wrapper{
    position: relative;
    bottom: 0;
    overflow-y: scroll;
    touch-action: manipulation;
    max-height: 100svh;
    padding-right: 0.5rem;
    scroll-behavior: smooth;
}

button, input, textarea, select, fieldset{
    font: inherit;
    color: inherit;
    background-color: inherit;
    border: 1px solid var(--CONTRAST-COLOR-DIM);
    border-radius: 0;
}

button, input, textarea, select{
    background-color: var(--BGCOLOR-DIM);
}

button:active,
input:active,
textarea:active{
    outline: 4px solid var(--CONTRAST-COLOR);
    outline-offset: -5px;
}

button:focus,
input:focus,
textarea:focus{
    outline: 2px solid var(--CONTRAST-COLOR);
}

h1,
h2{
    font-size: 1.4rem;
    height: var(--HEADER_HEIGHT);
    padding: 0rem 0.5rem;
    background-color: var(--BGCOLOR);
}

h1{
    margin-bottom: 0.8rem;
}

h2{
    border: 1px solid var(--CONTRAST-COLOR-DIMER);
    border-bottom: 0;
    border-radius: 0.5rem 0.5rem 0 0;
}

section{
    border: 1px solid var(--CONTRAST-COLOR-DIMER);
    border-top: 0;
    border-radius: 0 0 0.5rem 0.5rem;
    padding: 0.5rem; 
    scroll-margin-top: 12rem;
}

section p{
    line-height: 1.5;
}

fieldset{
    display:grid;
}

a {
    text-decoration: underline;
    color: inherit;
}

a:hover {
    color: var(--CONTRAST-COLOR-DIM);
}

.flex-grid{
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}

.flex-grid>:first-child{
    flex-basis: 400px;
    flex-grow: 1;
}

.flex-grid>:last-child{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    flex-basis: 400px;
    flex-grow: 1;
}

ul{
    list-style-type: none;
}

svg{
    fill: var(--CONTRAST-COLOR);
}

svg:hover {
    fill: var(--CONTRAST-COLOR-DIM);
}

.stickyTopHeader {
    top: calc(var(--coutFromTop) * var(--HEADER_HEIGHT))
}

.stickyBottomHeader {
    bottom: calc(var(--coutFromBottom) * var(--HEADER_HEIGHT))
}

.icon-wrapper{
    display: inline;
    float: right;
    margin-right: 1.5rem;
    margin-top: 0.2rem;
}

.header-icon{
    position: absolute;
    height: calc(var(--HEADER_HEIGHT) - 0.3rem);
    z-index: 2;
}

.header-icon.animated{
    transition: transform 0.1s ease-in-out;
    transform-origin: right top;
    transition: -webkit-transform 0.1s ease-in-out;
    -webkit-transform-origin: right top;
}

.header-in-view .header-icon.animated{
    transform: scale(2.5);
    -webkit-transform: scale(2.5);
}

/* to make room for scaling icon */
main section{
    padding-top: 2rem;
}

ol{
    list-style: inside decimal;
}

.lang-anchor{
    max-height: 100%;
    font-size: 1rem;
    position: absolute;
    right: calc(var(--HEADER_HEIGHT) + 0.5rem);
    top: 50%;
    transform: translate(0, -50%);
}

.auto-grid{
    --_min-column-size: 15rem;
    display: grid;
    gap: 1 rem;
    grid-template-columns: 
        repeat(auto-fit, minmax(min(var(--_min-column-size), 100%), 1fr));
}

.auto-grid>*{
    display: grid;
    grid-template-columns: 1fr 2fr;
    position: relative;
}

.tool-description{
    padding: 0.5rem;
    font-size: 1rem;
}